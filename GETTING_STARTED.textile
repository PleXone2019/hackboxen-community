h1. Getting Started

This readme is intended to help people new to ruby or just new to Infochimps get up and running with a hackbox.

h2. Prerequisites

* @git@ - Git is a version control system that we use for just about everything. You'll be using it to 'clone' this repo for example.
* @ruby@ - You must have _at least_ ruby 1.8.7 installed on your system to run any hackboxen.
* @gem@ - This is a tool for installing ruby gems (external libraries for ruby).

h3. Ruby Gems

Much of the rest of the dependencies come in the form of ruby gems (external code libraries) that will need to be installed. Examples include json, nokogiri, and configliere. To install nokogiri for example:

<pre><code>
sudo gem install nokogiri
</code></pre>

Here's a list of gems you will _for sure_ need:

* @rake@ - Rake is a tool for declaring a set of tasks and dependencies between them. Much of hackboxen uses rake's core functionality. A version 0.8.7 or greater is required.
* @configliere@ - A simple library for managing configuration settings
* @ohai@ - Can probe your system for information including architecture, os, ip address, and hostname.
* @erubis@ - A templating system for doing variable substitution.

And here's a list of gems you will _probably_ want:

* @json@ - For parsing and producing json data
* @nokogiri@ - For parsing and producing xml and html data

h3. Git

Some of the prerequisites come in the form of github repositories and you will have to clone them to use them. Say you wanted to clone the infochimps 'swineherd' repo:

<pre><code>
git clone git@github.com:infochimps/swineherd.git
</code></pre>

Will clone the repo. *However*, before you can use this library in any of your hackboxen you'll need to add this library to your @RUBYLIB@ environment variable.

Somewhere in your bash (or zsh) configuration files (these are the config files for your command line) put the following:

<pre><code>
export RUBYLIB=$RUBYLIB:/path/to/swineherd/lib
</code></pre>

You'll want to do this for the following infochimps repositories:

* @hackboxen@ - This repo itself.
* @swineherd@ - Implements a filesystem abstraction layer and enables running workflows on them.

h2. Your first hackbox

Let's just make a fake hackbox that doesn't do anything to ensure things are set up and configured properly. From the command line:

<pre><code>
# 'install' the hackboxen repo
cd hackboxen
rake install

# 'scaffold' in a new hackbox
rake scaffold -- --namespace=foo.bar --protocol=baz
</code></pre>

If all goes well the following should happen:

1. A $HOME/.hackbox directory will be created. In it will be a file called 'hackbox.yaml' that contains the bare minimum user level configuration required to run hackboxen.

2. A set of directories and files (the hackbox itself) should be created under the 'hackboxen/hb' directory:

<pre><code>
hb/foo
`-- bar
    `-- baz
        |-- Rakefile
        |-- config
        |   `-- config.yaml
        `-- engine
            `-- main
</code></pre>

See README.textile for a detailed description about what each of these files are and what they should contain.